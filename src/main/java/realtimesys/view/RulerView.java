/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package realtimesys.view;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import javax.swing.JFrame;

/**
 *
 * @author namng
 */
public class RulerView extends javax.swing.JPanel {

    private double max=20;
    private double interval=5;
    private double min=1;

    /**
     * Get the value of max
     *
     * @return the value of max
     */
    public double getMax() {
        return max;
    }
    

    /**
     * Get the value of interval
     *
     * @return the value of interval
     */
    public double getInterval() {
        return interval;
    }

    /**
     * Set the value of interval
     *
     * @param interval new value of interval
     */
    public void setInterval(double interval) {
        this.interval = interval;
    }


    /**
     * Set the value of max
     *
     * @param max new value of max
     */
    public void setMax(double max) {
        this.max = max;
    }

    

    /**
     * Get the value of min
     *
     * @return the value of min
     */
    public double getMin() {
        return min;
    }

    /**
     * Set the value of min
     *
     * @param min new value of min
     */
    public void setMin(double min) {
        this.min = min;
    }

    @Override
    protected void paintComponent(Graphics g)
    {
        int baseY = this.getHeight() / 3;
        int smallH = this.getHeight() / 3;
        int bigH = this.getHeight() * 2 / 3;
        int mg = (int)(this.getWidth() * this.ws / 100); 
        g.drawLine(mg, baseY, this.getWidth() - mg, baseY);
        for(double i = 0; i <= max; i+=min){
            int lx = (int)(i * (this.getWidth()-mg*2) / max);
            if(i % interval == 0){
                g.drawLine(lx+mg, baseY + bigH/2, lx+mg, baseY - bigH/2);
            }
            else{
                g.drawLine(lx+mg, baseY + smallH/2, lx+mg, baseY - smallH/2);
            }
        }
    }
    private double ws = 2.5;

    /**
     * Get the value of ws
     *
     * @return the value of ws
     */
    public double getWs() {
        return ws;
    }

    /**
     * Set the value of ws
     *
     * @param ws new value of ws
     */
    public void setWs(double ws) {
        this.ws = ws;
    }

    
    @Override
    public Dimension getPreferredSize() {
        return new Dimension(200, 50);
    }
    
    /**
     * Creates new form RulerView
     */
    public RulerView() {
        initComponents();
    }
    
    public static void main(String[] args)
    {
        JFrame frame = new JFrame("Bar Chart");	
        RulerView b = new RulerView();
        b.setSize(500, 20);
        b.max = 20;
        b.min = 1;
        b.interval = 5;
        frame.setLayout(new BorderLayout());
        frame.getContentPane().add(b, BorderLayout.CENTER);
        b.repaint();

        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
